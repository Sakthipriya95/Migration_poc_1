spool c:\temp\02_Create_Trigger.log

---------------------------------------------------------------------
--  ALM TaskId : 263187: Create database scripts for Risk Evaluation
--  DDL FOR TRIGGER TRG_RM_PROJECT_CHARACTER_INS
---------------------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_PROJECT_CHARACTER_INS 
BEFORE INSERT ON T_RM_PROJECT_CHARACTER
FOR EACH ROW
BEGIN
    IF :NEW.PRJ_CHARACTER_ID IS NULL THEN
        SELECT SEQV_ATTRIBUTES.NEXTVAL INTO :NEW.PRJ_CHARACTER_ID FROM DUAL;
    END IF;

    IF :NEW.VERSION IS NULL THEN
        :NEW.VERSION := 1;
    END IF;

    IF :NEW.CREATED_DATE IS NULL THEN
        :NEW.CREATED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.CREATED_USER IS NULL THEN
        :NEW.CREATED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_PROJECT_CHARACTER_INS ENABLE;
--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_PROJECT_CHARACTER_UPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_PROJECT_CHARACTER_UPD 
BEFORE UPDATE ON T_RM_PROJECT_CHARACTER
FOR EACH ROW
BEGIN
    IF :NEW.VERSION = :OLD.VERSION THEN
        :NEW.VERSION := :OLD.VERSION + 1;
    END IF;

    IF :NEW.MODIFIED_DATE IS NULL OR NOT UPDATING('MODIFIED_DATE') THEN
        :NEW.MODIFIED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.MODIFIED_USER IS NULL OR NOT UPDATING('MODIFIED_USER') THEN 
        :NEW.MODIFIED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_PROJECT_CHARACTER_UPD ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_RISK_LEVEL_INS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_RISK_LEVEL_INS 
BEFORE INSERT ON T_RM_RISK_LEVEL
FOR EACH ROW
BEGIN
    IF :NEW.RISK_LEVEL_ID IS NULL THEN
        SELECT SEQV_ATTRIBUTES.NEXTVAL INTO :NEW.RISK_LEVEL_ID FROM DUAL;
    END IF;

    IF :NEW.VERSION IS NULL THEN
        :NEW.VERSION := 1;
    END IF;

    IF :NEW.CREATED_DATE IS NULL THEN
        :NEW.CREATED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.CREATED_USER IS NULL THEN
        :NEW.CREATED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_RISK_LEVEL_INS ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_RISK_LEVEL_UPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_RISK_LEVEL_UPD 
BEFORE UPDATE ON T_RM_RISK_LEVEL
FOR EACH ROW
BEGIN
    IF :NEW.VERSION = :OLD.VERSION THEN
        :NEW.VERSION := :OLD.VERSION + 1;
    END IF;

    IF :NEW.MODIFIED_DATE IS NULL OR NOT UPDATING('MODIFIED_DATE') THEN
        :NEW.MODIFIED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.MODIFIED_USER IS NULL OR NOT UPDATING('MODIFIED_USER') THEN 
        :NEW.MODIFIED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_RISK_LEVEL_UPD ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_CATEGORY_INS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_CATEGORY_INS 
BEFORE INSERT ON T_RM_CATEGORY
FOR EACH ROW
BEGIN
    IF :NEW.CATEGORY_ID IS NULL THEN
        SELECT SEQV_ATTRIBUTES.NEXTVAL INTO :NEW.CATEGORY_ID FROM DUAL;
    END IF;

    IF :NEW.VERSION IS NULL THEN
        :NEW.VERSION := 1;
    END IF;

    IF :NEW.CREATED_DATE IS NULL THEN
        :NEW.CREATED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.CREATED_USER IS NULL THEN
        :NEW.CREATED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_CATEGORY_INS ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_CATEGORY_UPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_CATEGORY_UPD 
BEFORE UPDATE ON T_RM_CATEGORY
FOR EACH ROW
BEGIN
    IF :NEW.VERSION = :OLD.VERSION THEN
        :NEW.VERSION := :OLD.VERSION + 1;
    END IF;

    IF :NEW.MODIFIED_DATE IS NULL OR NOT UPDATING('MODIFIED_DATE') THEN
        :NEW.MODIFIED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.MODIFIED_USER IS NULL OR NOT UPDATING('MODIFIED_USER') THEN 
        :NEW.MODIFIED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_CATEGORY_UPD ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_CATEGORY_MEASURES_INS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_CATEGORY_MEASURES_INS 
BEFORE INSERT ON T_RM_CATEGORY_MEASURES
FOR EACH ROW
BEGIN
    IF :NEW.CATEGORY_MEASURE_ID IS NULL THEN
        SELECT SEQV_ATTRIBUTES.NEXTVAL INTO :NEW.CATEGORY_MEASURE_ID FROM DUAL;
    END IF;

    IF :NEW.VERSION IS NULL THEN
        :NEW.VERSION := 1;
    END IF;

    IF :NEW.CREATED_DATE IS NULL THEN
        :NEW.CREATED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.CREATED_USER IS NULL THEN
        :NEW.CREATED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_CATEGORY_MEASURES_INS ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_CATEGORY_MEASURES_UPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_CATEGORY_MEASURES_UPD 
BEFORE UPDATE ON T_RM_CATEGORY_MEASURES
FOR EACH ROW
BEGIN
    IF :NEW.VERSION = :OLD.VERSION THEN
        :NEW.VERSION := :OLD.VERSION + 1;
    END IF;

    IF :NEW.MODIFIED_DATE IS NULL OR NOT UPDATING('MODIFIED_DATE') THEN
        :NEW.MODIFIED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.MODIFIED_USER IS NULL OR NOT UPDATING('MODIFIED_USER') THEN 
        :NEW.MODIFIED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_CATEGORY_MEASURES_UPD ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_CHARACTER_CATEGORY_INS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_CHARACTER_CATEGORY_INS 
BEFORE INSERT ON T_RM_CHARACTER_CATEGORY_MATRIX
FOR EACH ROW
BEGIN
    IF :NEW.CCM_ID IS NULL THEN
        SELECT SEQV_ATTRIBUTES.NEXTVAL INTO :NEW.CCM_ID FROM DUAL;
    END IF;

    IF :NEW.VERSION IS NULL THEN
        :NEW.VERSION := 1;
    END IF;

    IF :NEW.CREATED_DATE IS NULL THEN
        :NEW.CREATED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.CREATED_USER IS NULL THEN
        :NEW.CREATED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_CHARACTER_CATEGORY_INS ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_RM_CHARACTER_CATEGORY_UPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_RM_CHARACTER_CATEGORY_UPD 
BEFORE UPDATE ON T_RM_CHARACTER_CATEGORY_MATRIX
FOR EACH ROW
BEGIN
    IF :NEW.VERSION = :OLD.VERSION THEN
        :NEW.VERSION := :OLD.VERSION + 1;
    END IF;

    IF :NEW.MODIFIED_DATE IS NULL OR NOT UPDATING('MODIFIED_DATE') THEN
        :NEW.MODIFIED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.MODIFIED_USER IS NULL OR NOT UPDATING('MODIFIED_USER') THEN 
        :NEW.MODIFIED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_RM_CHARACTER_CATEGORY_UPD ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_PIDC_RM_DEFINITION_INS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_PIDC_RM_DEFINITION_INS 
BEFORE INSERT ON T_PIDC_RM_DEFINITION
FOR EACH ROW
BEGIN
    IF :NEW.PIDC_RM_ID IS NULL THEN
        SELECT SEQV_ATTRIBUTES.NEXTVAL INTO :NEW.PIDC_RM_ID FROM DUAL;
    END IF;

    IF :NEW.VERSION IS NULL THEN
        :NEW.VERSION := 1;
    END IF;

    IF :NEW.CREATED_DATE IS NULL THEN
        :NEW.CREATED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.CREATED_USER IS NULL THEN
        :NEW.CREATED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_PIDC_RM_DEFINITION_INS ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_PIDC_RM_DEFINITION_UPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_PIDC_RM_DEFINITION_UPD 
BEFORE UPDATE ON T_PIDC_RM_DEFINITION
FOR EACH ROW
BEGIN
    IF :NEW.VERSION = :OLD.VERSION THEN
        :NEW.VERSION := :OLD.VERSION + 1;
    END IF;

    IF :NEW.MODIFIED_DATE IS NULL OR NOT UPDATING('MODIFIED_DATE') THEN
        :NEW.MODIFIED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.MODIFIED_USER IS NULL OR NOT UPDATING('MODIFIED_USER') THEN 
        :NEW.MODIFIED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_PIDC_RM_DEFINITION_UPD ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_PIDC_RM_PROJECCHARACTE_INS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_PIDC_RM_PROJECCHARACTE_INS 
BEFORE INSERT ON T_PIDC_RM_PROJECT_CHARACTER
FOR EACH ROW
BEGIN
    IF :NEW.PIDC_PC_ID IS NULL THEN
        SELECT SEQV_ATTRIBUTES.NEXTVAL INTO :NEW.PIDC_PC_ID FROM DUAL;
    END IF;

    IF :NEW.VERSION IS NULL THEN
        :NEW.VERSION := 1;
    END IF;

    IF :NEW.CREATED_DATE IS NULL THEN
        :NEW.CREATED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.CREATED_USER IS NULL THEN
        :NEW.CREATED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_PIDC_RM_PROJECCHARACTE_INS ENABLE;

--------------------------------------------------------
--  DDL FOR TRIGGER TRG_PIDC_RM_PROJECCHARACTE_UPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER TRG_PIDC_RM_PROJECCHARACTE_UPD 
BEFORE UPDATE ON T_PIDC_RM_PROJECT_CHARACTER
FOR EACH ROW
BEGIN
    IF :NEW.VERSION = :OLD.VERSION THEN
        :NEW.VERSION := :OLD.VERSION + 1;
    END IF;

    IF :NEW.MODIFIED_DATE IS NULL OR NOT UPDATING('MODIFIED_DATE') THEN
        :NEW.MODIFIED_DATE := SYS_EXTRACT_UTC(SYSTIMESTAMP);
    END IF;

    IF :NEW.MODIFIED_USER IS NULL OR NOT UPDATING('MODIFIED_USER') THEN 
        :NEW.MODIFIED_USER := USER;
    END IF;
END;
/
ALTER TRIGGER TRG_PIDC_RM_PROJECCHARACTE_UPD ENABLE;

spool off